// Code Patterns
// =============

pre {
  code {
    color: inherit;
  }
}

code {
  @include font-family('code');
  color: color('code-name-class');
  font-size: 80%; // accommodate for inline <code> in any size element
  padding: 3px;

  a & {
    color: color('action');
  }

  a:hover & { // sass-lint:disable-line force-pseudo-nesting
    color: color('action-hover');
  }
}

// See: http://pygments.org/docs/styles/
// And: https://github.com/richleland/pygments-css
.code {
  background-color: color('background');
  border: 1px solid color('shadow');
  color: color('text');
  font-size: size('small');
  margin-bottom: size('gutter');
  padding: size('shim');

  // Generated by Pygments CSS Theme Builder
  // https://jwarby.github.io/jekyll-pygments-themes/builder.html

  // Punctuation
  .p {
    color: color('code-punct');
  }

  // Error
  .err {
    color: color('code-error');
  }

  // Base Style
  .n {
    color: color('code-name');
  }

  // Name Attribute
  .na {
    color: color('code-name-att');
  }

  // Name Builtin
  .nb {
    color: color('code-name-builtin');
  }

  // Name Class
  .nc {
    color: color('code-name-class');
  }

  // Name Constant
  .no {
    color: color('code-name-constant');
  }

  // Name Decorator
  .nd {
    color: color('code-name-decorator');
  }

  // Name Entity
  .ni {
    color: color('code-name-entity');
  }

  // Name Exception
  .ne {
    color: color('code-name-exception');
  }

  // Name Function
  .nf {
    color: color('code-name-function');
  }

  // Name Label
  .nl {
    color: color('code-name-label');
  }

  // Name Namespace
  .nn {
    color: color('code-name-namespace');
  }

  // Name Other
  .nx {
    color: color('code-name-other');
  }

  // Name Property
  .py {
    color: color('code-name-property');
  }

  // Name Tag
  .nt {
    color: color('code-name-tag');
  }

  // Name Variable
  .nv {
    color: color('code-name-var');
  }

  // Name Variable Class
  .vc {
    color: color('code-name-var-class');
  }

  // Name Variable Global
  .vg {
    color: color('code-name-var-global');
  }

  // Name Variable Instance
  .vi {
    color: color('code-name-var-instance');
  }

  // Name Builtin Pseudo
  .bp {
    color: color('code-name-bi-pseudo');
  }

  // Base Style
  .o {
    color: color('code-operator');
  }

  // Operator Word
  .ow {
    color: color('code-operator-word');
  }

  // Base Style
  .c {
    color: color('code-comment');
    font-style: italic;
  }

  // Comment Multiline
  .cm {
    color: color('code-comment-multi');
    font-style: italic;
  }

  // Comment Preproc
  .cp {
    color: color('code-comment-preproc');
    font-style: italic;
  }

  // Comment Single
  .c1 {
    color: color('code-comment-single');
    font-style: italic;
  }

  // Comment Special
  .cs {
    color: color('code-comment-special');
    font-style: italic;
  }

  // Base Style
  .k {
    color: color('code-key');
  }

  // Keyword Constant
  .kc {
    color: color('code-key-constant');
  }

  // Keyword Declaration
  .kd {
    color: color('code-key-declaration');
  }

  // Keyword Namespace
  .kn {
    color: color('code-key-namespace');
  }

  // Keyword Pseudo
  .kp {
    color: color('code-key-pseudo');
  }

  // Keyword Reserved
  .kr {
    color: color('code-key-reserved');
  }

  // Keyword Type
  .kt {
    color: color('code-key-type');
  }

  // Base Style
  .l {
    color: color('brand-pink');
  }

  // Literal Date
  .ld {
    color: color('code-lit-date');
  }

  // Literal Number
  .m {
    color: color('code-lit-num');
  }

  // Literal Number Float
  .mf {
    color: color('code-lit-num-float');
  }

  // Literal Number Hex
  .mh {
    color: color('code-lit-num-hex');
  }

  // Literal Number Integer
  .mi {
    color: color('code-lit-num-int');
  }

  // Literal Number Oct
  .mo {
    color: color('code-lit-num-oct');
  }

  // Literal Number Integer Long
  .il {
    color: color('code-lit-num-long');
  }

  // Literal String
  .s {
    color: color('code-string');
  }

  // Literal String Backtick
  .sb {
    color: color('code-string-backtick');
  }

  // Literal String Char
  .sc {
    color: color('code-string-char');
  }

  // Literal String Doc
  .sd {
    color: color('code-string-doc');
  }

  // Literal String Double
  .s2 {
    color: color('code-string-double');
  }

  // Literal String Escape
  .se {
    color: color('code-string-escape');
  }

  // Literal String Heredoc
  .sh {
    color: color('code-string-heredoc');
  }

  // Literal String Interpol
  .si {
    color: color('code-string-interpol');
  }

  // Literal String Other
  .sx {
    color: color('code-string-other');
  }

  // Literal String Regex
  .sr {
    color: color('code-string-regex');
  }

  // Literal String Single
  .s1 {
    color: color('code-string-single');
  }

  // Literal String Symbol
  .ss {
    color: color('code-string-sym');
  }

  // Base Style
  .g {
    color: color('code-gen');
  }

  // Generic Deleted
  .gd {
    color: color('code-gen-del');
  }

  // Generic Emph
  .ge {
    color: color('code-gen-emph');
  }

  // Generic Error
  .gr {
    color: color('code-gen-error');
  }

  // Generic Heading
  .gh {
    color: color('code-gen-heading');
  }

  // Generic Inserted
  .gi {
    color: color('code-gen-inserted');
  }

  // Generic Output
  .go {
    color: color('code-gen-output');
  }

  // Generic Prompt
  .gp {
    color: color('code-gen-prompt');
  }

  // Generic Strong
  .gs {
    color: color('code-gen-strong');
  }

  // Generic Subheading
  .gu {
    color: color('code-gen-subhead');
  }

  // Generic Traceback
  .gt {
    color: color('text');
  }

  // Other
  .x {
    color: color('text');
  }

  // Text Whitespace
  .w {
    color: transparent;
  }
}
